{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/syedzoheb/Documents/Practice/Reactjs/bitprice/components/Prices.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar Prices =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Prices, _React$Component);\n\n  function Prices() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Prices);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Prices)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      currency: 'USD'\n    });\n\n    return _this;\n  }\n\n  _createClass(Prices, [{\n    key: \"render\",\n    value: function render() {\n      var list = '';\n\n      if (this.state.currency === 'USD') {\n        list = __jsx(\"li\", {\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        }, \"Bitcoin Rate for \", this.props.bpi.USD.description, \":\", ' ', __jsx(\"span\", {\n          className: \"badge badge-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, this.props.bpi.USD.code), __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, this.props.bpi.USD.rate));\n      } else if (this.state.currency === 'GBP') {} else if (this.state.currency === 'EUR') {}\n\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, __jsx(\"ul\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Prices;\n}(React.Component);\n\nexport default Prices;","map":{"version":3,"sources":["/Users/syedzoheb/Documents/Practice/Reactjs/bitprice/components/Prices.js"],"names":["Prices","currency","list","state","props","bpi","USD","description","code","rate","React","Component"],"mappings":";;;;;;;;;;;IAAMA,M;;;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,QAAQ,EAAE;AADJ,K;;;;;;;6BAIC;AACP,UAAIC,IAAI,GAAG,EAAX;;AACA,UAAI,KAAKC,KAAL,CAAWF,QAAX,KAAwB,KAA5B,EAAmC;AACjCC,QAAAA,IAAI,GACF;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACoB,KAAKE,KAAL,CAAWC,GAAX,CAAeC,GAAf,CAAmBC,WADvC,OACqD,GADrD,EAEE;AAAM,UAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuC,KAAKH,KAAL,CAAWC,GAAX,CAAeC,GAAf,CAAmBE,IAA1D,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAS,KAAKJ,KAAL,CAAWC,GAAX,CAAeC,GAAf,CAAmBG,IAA5B,CAHF,CADF;AAOD,OARD,MAQO,IAAI,KAAKN,KAAL,CAAWF,QAAX,KAAwB,KAA5B,EAAmC,CACzC,CADM,MACA,IAAI,KAAKE,KAAL,CAAWF,QAAX,KAAwB,KAA5B,EAAmC,CACzC;;AAED,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;EAxBkBS,KAAK,CAACC,S;;AA2B3B,eAAeX,MAAf","sourcesContent":["class Prices extends React.Component {\n  state = {\n    currency: 'USD'\n  };\n\n  render() {\n    let list = '';\n    if (this.state.currency === 'USD') {\n      list = (\n        <li className='list-group-item'>\n          Bitcoin Rate for {this.props.bpi.USD.description}:{' '}\n          <span className='badge badge-primary'>{this.props.bpi.USD.code}</span>\n          <strong>{this.props.bpi.USD.rate}</strong>\n        </li>\n      );\n    } else if (this.state.currency === 'GBP') {\n    } else if (this.state.currency === 'EUR') {\n    }\n\n    return (\n      <div>\n        <ul className='list-group'></ul>\n      </div>\n    );\n  }\n}\n\nexport default Prices;\n"]},"metadata":{},"sourceType":"module"}